//
// M22PlayerOrbAnimationView.m
// Generated by Core Animator version 1.3.2 on 12/30/16.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

#import "M22PlayerOrbAnimationView.h"

@interface M22PlayerOrbAnimationPassthroughView : UIView
@end
@implementation M22PlayerOrbAnimationPassthroughView
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent *)event {
    for ( UIView *subview in self.subviews ) {
        if ( [subview pointInside:[self convertPoint:point toView:subview] withEvent:event]) { return true; }
    }
    return false;
}
@end

@implementation M22PlayerOrbAnimationView

#pragma mark - Life Cycle

- (instancetype)init
{
	return [self initWithFrame:CGRectMake(0,0,650,290)];
}

- (instancetype)initWithFrame:(CGRect)frame
{
	self = [super initWithFrame:frame];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

- (instancetype)initWithCoder:(NSCoder *)coder
{
	self = [super initWithCoder:coder];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

#pragma mark - Scaling

- (void)layoutSubviews
{
	[super layoutSubviews];

	UIView *scalingView = self.viewsByName[@"__scaling__"];
	float xScale = self.bounds.size.width / scalingView.bounds.size.width;
	float yScale = self.bounds.size.height / scalingView.bounds.size.height;
	switch (self.contentMode) {
		case UIViewContentModeScaleToFill:
			break;
		case UIViewContentModeScaleAspectFill:
		{
			float scale = MAX(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
		default:
		{
			float scale = MIN(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
	}
	scalingView.transform = CGAffineTransformMakeScale(xScale, yScale);
	scalingView.center = CGPointMake(CGRectGetMidX(self.bounds), CGRectGetMidY(self.bounds));
}

#pragma mark - Setup

- (void)setupHierarchy
{
	NSMutableDictionary *viewsByName = [NSMutableDictionary dictionary];
	NSBundle *bundle = [NSBundle bundleForClass:[self class]];

	UIView *__scaling__ = [UIView new];
	__scaling__.bounds = CGRectMake(0, 0, 650, 290);
	__scaling__.center = CGPointMake(325.0, 145.0);
	__scaling__.layer.masksToBounds = YES;
	[self addSubview:__scaling__];
	viewsByName[@"__scaling__"] = __scaling__;

	M22PlayerOrbAnimationPassthroughView *orbStare__root = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbStare__xScale = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbStare__yScale = [M22PlayerOrbAnimationPassthroughView new];
	UIImageView *orbStare = [UIImageView new];
	UIImage *imgOrbStare = [UIImage imageNamed:@"orb stare.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrbStare == nil ) { NSLog(@"** Warning: Could not create image from 'orb stare.png'."); }
	orbStare.image = imgOrbStare;
	orbStare.contentMode = UIViewContentModeCenter;
	orbStare.bounds = CGRectMake(0, 0, 677.0, 302.0);
	orbStare__root.layer.position = CGPointMake(324.960, 144.960);
	orbStare__xScale.transform = CGAffineTransformMakeScale(0.96, 1.00);
	orbStare__yScale.transform = CGAffineTransformMakeScale(1.00, 0.96);
	orbStare__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orbStare__root];
	[orbStare__root addSubview:orbStare__xScale];
	[orbStare__xScale addSubview:orbStare__yScale];
	[orbStare__yScale addSubview:orbStare];
	[__scaling__ addSubview:orbStare__root];
	viewsByName[@"orb stare__root"] = orbStare__root;
	viewsByName[@"orb stare__xScale"] = orbStare__xScale;
	viewsByName[@"orb stare__yScale"] = orbStare__yScale;
	viewsByName[@"orb stare"] = orbStare;

	M22PlayerOrbAnimationPassthroughView *orbMidOne__root = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbMidOne__xScale = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbMidOne__yScale = [M22PlayerOrbAnimationPassthroughView new];
	UIImageView *orbMidOne = [UIImageView new];
	UIImage *imgOrbMidOne = [UIImage imageNamed:@"orb mid one.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrbMidOne == nil ) { NSLog(@"** Warning: Could not create image from 'orb mid one.png'."); }
	orbMidOne.image = imgOrbMidOne;
	orbMidOne.contentMode = UIViewContentModeCenter;
	orbMidOne.bounds = CGRectMake(0, 0, 164.0, 118.0);
	orbMidOne__root.layer.position = CGPointMake(329.000, 54.000);
	orbMidOne__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbMidOne__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbMidOne__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orbMidOne__root];
	[orbMidOne__root addSubview:orbMidOne__xScale];
	[orbMidOne__xScale addSubview:orbMidOne__yScale];
	[orbMidOne__yScale addSubview:orbMidOne];
	[__scaling__ addSubview:orbMidOne__root];
	viewsByName[@"orb mid one__root"] = orbMidOne__root;
	viewsByName[@"orb mid one__xScale"] = orbMidOne__xScale;
	viewsByName[@"orb mid one__yScale"] = orbMidOne__yScale;
	viewsByName[@"orb mid one"] = orbMidOne;

	M22PlayerOrbAnimationPassthroughView *orbMidTwo__root = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbMidTwo__xScale = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbMidTwo__yScale = [M22PlayerOrbAnimationPassthroughView new];
	UIImageView *orbMidTwo = [UIImageView new];
	UIImage *imgOrbMidTwo = [UIImage imageNamed:@"orb mid two.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrbMidTwo == nil ) { NSLog(@"** Warning: Could not create image from 'orb mid two.png'."); }
	orbMidTwo.image = imgOrbMidTwo;
	orbMidTwo.contentMode = UIViewContentModeCenter;
	orbMidTwo.bounds = CGRectMake(0, 0, 193.0, 168.0);
	orbMidTwo__root.layer.position = CGPointMake(333.000, 125.556);
	orbMidTwo__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbMidTwo__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbMidTwo__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orbMidTwo__root];
	[orbMidTwo__root addSubview:orbMidTwo__xScale];
	[orbMidTwo__xScale addSubview:orbMidTwo__yScale];
	[orbMidTwo__yScale addSubview:orbMidTwo];
	[__scaling__ addSubview:orbMidTwo__root];
	viewsByName[@"orb mid two__root"] = orbMidTwo__root;
	viewsByName[@"orb mid two__xScale"] = orbMidTwo__xScale;
	viewsByName[@"orb mid two__yScale"] = orbMidTwo__yScale;
	viewsByName[@"orb mid two"] = orbMidTwo;

	M22PlayerOrbAnimationPassthroughView *orbMidThree__root = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbMidThree__xScale = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbMidThree__yScale = [M22PlayerOrbAnimationPassthroughView new];
	UIImageView *orbMidThree = [UIImageView new];
	UIImage *imgOrbMidThree = [UIImage imageNamed:@"orb mid three.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrbMidThree == nil ) { NSLog(@"** Warning: Could not create image from 'orb mid three.png'."); }
	orbMidThree.image = imgOrbMidThree;
	orbMidThree.contentMode = UIViewContentModeCenter;
	orbMidThree.bounds = CGRectMake(0, 0, 197.0, 170.0);
	orbMidThree__root.layer.position = CGPointMake(333.365, 193.236);
	orbMidThree__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbMidThree__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbMidThree__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orbMidThree__root];
	[orbMidThree__root addSubview:orbMidThree__xScale];
	[orbMidThree__xScale addSubview:orbMidThree__yScale];
	[orbMidThree__yScale addSubview:orbMidThree];
	[__scaling__ addSubview:orbMidThree__root];
	viewsByName[@"orb mid three__root"] = orbMidThree__root;
	viewsByName[@"orb mid three__xScale"] = orbMidThree__xScale;
	viewsByName[@"orb mid three__yScale"] = orbMidThree__yScale;
	viewsByName[@"orb mid three"] = orbMidThree;

	M22PlayerOrbAnimationPassthroughView *orbMidFour__root = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbMidFour__xScale = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbMidFour__yScale = [M22PlayerOrbAnimationPassthroughView new];
	UIImageView *orbMidFour = [UIImageView new];
	UIImage *imgOrbMidFour = [UIImage imageNamed:@"orb mid four.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrbMidFour == nil ) { NSLog(@"** Warning: Could not create image from 'orb mid four.png'."); }
	orbMidFour.image = imgOrbMidFour;
	orbMidFour.contentMode = UIViewContentModeCenter;
	orbMidFour.bounds = CGRectMake(0, 0, 205.0, 175.0);
	orbMidFour__root.layer.position = CGPointMake(333.956, 259.916);
	orbMidFour__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbMidFour__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbMidFour__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orbMidFour__root];
	[orbMidFour__root addSubview:orbMidFour__xScale];
	[orbMidFour__xScale addSubview:orbMidFour__yScale];
	[orbMidFour__yScale addSubview:orbMidFour];
	[__scaling__ addSubview:orbMidFour__root];
	viewsByName[@"orb mid four__root"] = orbMidFour__root;
	viewsByName[@"orb mid four__xScale"] = orbMidFour__xScale;
	viewsByName[@"orb mid four__yScale"] = orbMidFour__yScale;
	viewsByName[@"orb mid four"] = orbMidFour;

	M22PlayerOrbAnimationPassthroughView *orbLeftOne__root = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbLeftOne__xScale = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbLeftOne__yScale = [M22PlayerOrbAnimationPassthroughView new];
	UIImageView *orbLeftOne = [UIImageView new];
	UIImage *imgOrbLeftOne = [UIImage imageNamed:@"orb left one.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrbLeftOne == nil ) { NSLog(@"** Warning: Could not create image from 'orb left one.png'."); }
	orbLeftOne.image = imgOrbLeftOne;
	orbLeftOne.contentMode = UIViewContentModeCenter;
	orbLeftOne.bounds = CGRectMake(0, 0, 154.0, 133.0);
	orbLeftOne__root.layer.position = CGPointMake(213.100, 78.500);
	orbLeftOne__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbLeftOne__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbLeftOne__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orbLeftOne__root];
	[orbLeftOne__root addSubview:orbLeftOne__xScale];
	[orbLeftOne__xScale addSubview:orbLeftOne__yScale];
	[orbLeftOne__yScale addSubview:orbLeftOne];
	[__scaling__ addSubview:orbLeftOne__root];
	viewsByName[@"orb left one__root"] = orbLeftOne__root;
	viewsByName[@"orb left one__xScale"] = orbLeftOne__xScale;
	viewsByName[@"orb left one__yScale"] = orbLeftOne__yScale;
	viewsByName[@"orb left one"] = orbLeftOne;

	M22PlayerOrbAnimationPassthroughView *orbLeftTwo__root = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbLeftTwo__xScale = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbLeftTwo__yScale = [M22PlayerOrbAnimationPassthroughView new];
	UIImageView *orbLeftTwo = [UIImageView new];
	UIImage *imgOrbLeftTwo = [UIImage imageNamed:@"orb left two.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrbLeftTwo == nil ) { NSLog(@"** Warning: Could not create image from 'orb left two.png'."); }
	orbLeftTwo.image = imgOrbLeftTwo;
	orbLeftTwo.contentMode = UIViewContentModeCenter;
	orbLeftTwo.bounds = CGRectMake(0, 0, 137.0, 156.0);
	orbLeftTwo__root.layer.position = CGPointMake(139.176, 144.000);
	orbLeftTwo__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbLeftTwo__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbLeftTwo__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orbLeftTwo__root];
	[orbLeftTwo__root addSubview:orbLeftTwo__xScale];
	[orbLeftTwo__xScale addSubview:orbLeftTwo__yScale];
	[orbLeftTwo__yScale addSubview:orbLeftTwo];
	[__scaling__ addSubview:orbLeftTwo__root];
	viewsByName[@"orb left two__root"] = orbLeftTwo__root;
	viewsByName[@"orb left two__xScale"] = orbLeftTwo__xScale;
	viewsByName[@"orb left two__yScale"] = orbLeftTwo__yScale;
	viewsByName[@"orb left two"] = orbLeftTwo;

	M22PlayerOrbAnimationPassthroughView *orbLeftThree__root = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbLeftThree__xScale = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbLeftThree__yScale = [M22PlayerOrbAnimationPassthroughView new];
	UIImageView *orbLeftThree = [UIImageView new];
	UIImage *imgOrbLeftThree = [UIImage imageNamed:@"orb left three.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrbLeftThree == nil ) { NSLog(@"** Warning: Could not create image from 'orb left three.png'."); }
	orbLeftThree.image = imgOrbLeftThree;
	orbLeftThree.contentMode = UIViewContentModeCenter;
	orbLeftThree.bounds = CGRectMake(0, 0, 133.0, 165.0);
	orbLeftThree__root.layer.position = CGPointMake(106.237, 223.472);
	orbLeftThree__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbLeftThree__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbLeftThree__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orbLeftThree__root];
	[orbLeftThree__root addSubview:orbLeftThree__xScale];
	[orbLeftThree__xScale addSubview:orbLeftThree__yScale];
	[orbLeftThree__yScale addSubview:orbLeftThree];
	[__scaling__ addSubview:orbLeftThree__root];
	viewsByName[@"orb left three__root"] = orbLeftThree__root;
	viewsByName[@"orb left three__xScale"] = orbLeftThree__xScale;
	viewsByName[@"orb left three__yScale"] = orbLeftThree__yScale;
	viewsByName[@"orb left three"] = orbLeftThree;

	M22PlayerOrbAnimationPassthroughView *orbRightOne__root = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbRightOne__xScale = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbRightOne__yScale = [M22PlayerOrbAnimationPassthroughView new];
	UIImageView *orbRightOne = [UIImageView new];
	UIImage *imgOrbRightOne = [UIImage imageNamed:@"orb right one.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrbRightOne == nil ) { NSLog(@"** Warning: Could not create image from 'orb right one.png'."); }
	orbRightOne.image = imgOrbRightOne;
	orbRightOne.contentMode = UIViewContentModeCenter;
	orbRightOne.bounds = CGRectMake(0, 0, 152.0, 131.0);
	orbRightOne__root.layer.position = CGPointMake(444.169, 81.500);
	orbRightOne__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbRightOne__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbRightOne__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orbRightOne__root];
	[orbRightOne__root addSubview:orbRightOne__xScale];
	[orbRightOne__xScale addSubview:orbRightOne__yScale];
	[orbRightOne__yScale addSubview:orbRightOne];
	[__scaling__ addSubview:orbRightOne__root];
	viewsByName[@"orb right one__root"] = orbRightOne__root;
	viewsByName[@"orb right one__xScale"] = orbRightOne__xScale;
	viewsByName[@"orb right one__yScale"] = orbRightOne__yScale;
	viewsByName[@"orb right one"] = orbRightOne;

	M22PlayerOrbAnimationPassthroughView *orbRightTwo__root = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbRightTwo__xScale = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbRightTwo__yScale = [M22PlayerOrbAnimationPassthroughView new];
	UIImageView *orbRightTwo = [UIImageView new];
	UIImage *imgOrbRightTwo = [UIImage imageNamed:@"orb right two.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrbRightTwo == nil ) { NSLog(@"** Warning: Could not create image from 'orb right two.png'."); }
	orbRightTwo.image = imgOrbRightTwo;
	orbRightTwo.contentMode = UIViewContentModeCenter;
	orbRightTwo.bounds = CGRectMake(0, 0, 137.0, 156.0);
	orbRightTwo__root.layer.position = CGPointMake(508.472, 140.000);
	orbRightTwo__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbRightTwo__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbRightTwo__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orbRightTwo__root];
	[orbRightTwo__root addSubview:orbRightTwo__xScale];
	[orbRightTwo__xScale addSubview:orbRightTwo__yScale];
	[orbRightTwo__yScale addSubview:orbRightTwo];
	[__scaling__ addSubview:orbRightTwo__root];
	viewsByName[@"orb right two__root"] = orbRightTwo__root;
	viewsByName[@"orb right two__xScale"] = orbRightTwo__xScale;
	viewsByName[@"orb right two__yScale"] = orbRightTwo__yScale;
	viewsByName[@"orb right two"] = orbRightTwo;

	M22PlayerOrbAnimationPassthroughView *orbRightThree__root = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbRightThree__xScale = [M22PlayerOrbAnimationPassthroughView new];
	M22PlayerOrbAnimationPassthroughView *orbRightThree__yScale = [M22PlayerOrbAnimationPassthroughView new];
	UIImageView *orbRightThree = [UIImageView new];
	UIImage *imgOrbRightThree = [UIImage imageNamed:@"orb right three.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrbRightThree == nil ) { NSLog(@"** Warning: Could not create image from 'orb right three.png'."); }
	orbRightThree.image = imgOrbRightThree;
	orbRightThree.contentMode = UIViewContentModeCenter;
	orbRightThree.bounds = CGRectMake(0, 0, 133.0, 163.0);
	orbRightThree__root.layer.position = CGPointMake(544.261, 222.331);
	orbRightThree__xScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbRightThree__yScale.transform = CGAffineTransformMakeScale(1.00, 1.00);
	orbRightThree__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orbRightThree__root];
	[orbRightThree__root addSubview:orbRightThree__xScale];
	[orbRightThree__xScale addSubview:orbRightThree__yScale];
	[orbRightThree__yScale addSubview:orbRightThree];
	[__scaling__ addSubview:orbRightThree__root];
	viewsByName[@"orb right three__root"] = orbRightThree__root;
	viewsByName[@"orb right three__xScale"] = orbRightThree__xScale;
	viewsByName[@"orb right three__yScale"] = orbRightThree__yScale;
	viewsByName[@"orb right three"] = orbRightThree;

	self.viewsByName = viewsByName;
}

#pragma mark - M22PlayerOrbAnimation

- (void)addM22PlayerOrbAnimation
{
	[self addM22PlayerOrbAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO];
}

- (void)addM22PlayerOrbAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion
{
	[self addM22PlayerOrbAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion];
}

- (void)addM22PlayerOrbAnimationWithBeginTime:(CFTimeInterval)beginTime andFillMode:(NSString *)fillMode andRemoveOnCompletion:(BOOL)removedOnCompletion
{
	CAMediaTimingFunction *linearTiming = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];

	CAKeyframeAnimation *orbRightOneOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	orbRightOneOpacityAnimation.duration = 8.250;
	orbRightOneOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000)];
	orbRightOneOpacityAnimation.keyTimes = @[@(0.000), @(0.176), @(0.182), @(0.297), @(0.303), @(0.570), @(0.576), @(0.630), @(0.636), @(0.964), @(0.970), @(1.000)];
	orbRightOneOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	orbRightOneOpacityAnimation.repeatCount = HUGE_VALF;
	orbRightOneOpacityAnimation.beginTime = beginTime;
	orbRightOneOpacityAnimation.fillMode = fillMode;
	orbRightOneOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"orb right one__root"] layer] addAnimation:orbRightOneOpacityAnimation forKey:@"M22PlayerOrbAnimation_Opacity"];

	CAKeyframeAnimation *orbLeftTwoOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	orbLeftTwoOpacityAnimation.duration = 8.250;
	orbLeftTwoOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000)];
	orbLeftTwoOpacityAnimation.keyTimes = @[@(0.000), @(0.206), @(0.212), @(0.267), @(0.273), @(0.418), @(0.424), @(0.479), @(0.485), @(0.903), @(0.909), @(0.964), @(0.970), @(1.000)];
	orbLeftTwoOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	orbLeftTwoOpacityAnimation.repeatCount = HUGE_VALF;
	orbLeftTwoOpacityAnimation.beginTime = beginTime;
	orbLeftTwoOpacityAnimation.fillMode = fillMode;
	orbLeftTwoOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"orb left two__root"] layer] addAnimation:orbLeftTwoOpacityAnimation forKey:@"M22PlayerOrbAnimation_Opacity"];

	CAKeyframeAnimation *orbMidOneOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	orbMidOneOpacityAnimation.duration = 8.250;
	orbMidOneOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000)];
	orbMidOneOpacityAnimation.keyTimes = @[@(0.000), @(0.024), @(0.030), @(0.085), @(0.091), @(0.327), @(0.333), @(0.418), @(0.424), @(0.539), @(0.545), @(0.600), @(0.606), @(0.721), @(0.727), @(0.782), @(0.788), @(1.000)];
	orbMidOneOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	orbMidOneOpacityAnimation.repeatCount = HUGE_VALF;
	orbMidOneOpacityAnimation.beginTime = beginTime;
	orbMidOneOpacityAnimation.fillMode = fillMode;
	orbMidOneOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"orb mid one__root"] layer] addAnimation:orbMidOneOpacityAnimation forKey:@"M22PlayerOrbAnimation_Opacity"];

	CAKeyframeAnimation *orbMidThreeOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	orbMidThreeOpacityAnimation.duration = 8.250;
	orbMidThreeOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000)];
	orbMidThreeOpacityAnimation.keyTimes = @[@(0.000), @(0.115), @(0.121), @(0.206), @(0.212), @(0.782), @(0.788), @(0.842), @(0.848), @(1.000)];
	orbMidThreeOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	orbMidThreeOpacityAnimation.repeatCount = HUGE_VALF;
	orbMidThreeOpacityAnimation.beginTime = beginTime;
	orbMidThreeOpacityAnimation.fillMode = fillMode;
	orbMidThreeOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"orb mid three__root"] layer] addAnimation:orbMidThreeOpacityAnimation forKey:@"M22PlayerOrbAnimation_Opacity"];

	CAKeyframeAnimation *orbRightTwoOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	orbRightTwoOpacityAnimation.duration = 8.250;
	orbRightTwoOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000)];
	orbRightTwoOpacityAnimation.keyTimes = @[@(0.000), @(0.267), @(0.273), @(0.358), @(0.364), @(0.600), @(0.606), @(0.661), @(0.667), @(0.933), @(0.939), @(0.994), @(1.000)];
	orbRightTwoOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	orbRightTwoOpacityAnimation.repeatCount = HUGE_VALF;
	orbRightTwoOpacityAnimation.beginTime = beginTime;
	orbRightTwoOpacityAnimation.fillMode = fillMode;
	orbRightTwoOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"orb right two__root"] layer] addAnimation:orbRightTwoOpacityAnimation forKey:@"M22PlayerOrbAnimation_Opacity"];

	CAKeyframeAnimation *orbLeftOneOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	orbLeftOneOpacityAnimation.duration = 8.250;
	orbLeftOneOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000)];
	orbLeftOneOpacityAnimation.keyTimes = @[@(0.000), @(0.085), @(0.091), @(0.176), @(0.182), @(0.358), @(0.364), @(0.448), @(0.455), @(1.000)];
	orbLeftOneOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	orbLeftOneOpacityAnimation.repeatCount = HUGE_VALF;
	orbLeftOneOpacityAnimation.beginTime = beginTime;
	orbLeftOneOpacityAnimation.fillMode = fillMode;
	orbLeftOneOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"orb left one__root"] layer] addAnimation:orbLeftOneOpacityAnimation forKey:@"M22PlayerOrbAnimation_Opacity"];

	CAKeyframeAnimation *orbRightThreeOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	orbRightThreeOpacityAnimation.duration = 8.250;
	orbRightThreeOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000)];
	orbRightThreeOpacityAnimation.keyTimes = @[@(0.000), @(0.055), @(0.061), @(0.115), @(0.121), @(0.630), @(0.636), @(0.691), @(0.697), @(1.000)];
	orbRightThreeOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	orbRightThreeOpacityAnimation.repeatCount = HUGE_VALF;
	orbRightThreeOpacityAnimation.beginTime = beginTime;
	orbRightThreeOpacityAnimation.fillMode = fillMode;
	orbRightThreeOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"orb right three__root"] layer] addAnimation:orbRightThreeOpacityAnimation forKey:@"M22PlayerOrbAnimation_Opacity"];

	CAKeyframeAnimation *orbMidTwoOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	orbMidTwoOpacityAnimation.duration = 8.250;
	orbMidTwoOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000)];
	orbMidTwoOpacityAnimation.keyTimes = @[@(0.000), @(0.297), @(0.303), @(0.388), @(0.394), @(0.752), @(0.758), @(0.812), @(0.818), @(1.000)];
	orbMidTwoOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	orbMidTwoOpacityAnimation.repeatCount = HUGE_VALF;
	orbMidTwoOpacityAnimation.beginTime = beginTime;
	orbMidTwoOpacityAnimation.fillMode = fillMode;
	orbMidTwoOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"orb mid two__root"] layer] addAnimation:orbMidTwoOpacityAnimation forKey:@"M22PlayerOrbAnimation_Opacity"];

	CAKeyframeAnimation *orbLeftThreeOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	orbLeftThreeOpacityAnimation.duration = 8.250;
	orbLeftThreeOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000)];
	orbLeftThreeOpacityAnimation.keyTimes = @[@(0.000), @(0.145), @(0.152), @(0.236), @(0.242), @(0.448), @(0.455), @(0.509), @(0.515), @(1.000)];
	orbLeftThreeOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	orbLeftThreeOpacityAnimation.repeatCount = HUGE_VALF;
	orbLeftThreeOpacityAnimation.beginTime = beginTime;
	orbLeftThreeOpacityAnimation.fillMode = fillMode;
	orbLeftThreeOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"orb left three__root"] layer] addAnimation:orbLeftThreeOpacityAnimation forKey:@"M22PlayerOrbAnimation_Opacity"];

	CAKeyframeAnimation *orbMidFourOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	orbMidFourOpacityAnimation.duration = 8.250;
	orbMidFourOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000), @(1.000), @(1.000), @(0.000), @(0.000)];
	orbMidFourOpacityAnimation.keyTimes = @[@(0.000), @(0.236), @(0.242), @(0.327), @(0.333), @(0.812), @(0.818), @(0.873), @(0.879), @(1.000)];
	orbMidFourOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	orbMidFourOpacityAnimation.repeatCount = HUGE_VALF;
	orbMidFourOpacityAnimation.beginTime = beginTime;
	orbMidFourOpacityAnimation.fillMode = fillMode;
	orbMidFourOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"orb mid four__root"] layer] addAnimation:orbMidFourOpacityAnimation forKey:@"M22PlayerOrbAnimation_Opacity"];
}

- (void)removeM22PlayerOrbAnimation
{
	[[self.viewsByName[@"orb right one__root"] layer] removeAnimationForKey:@"M22PlayerOrbAnimation_Opacity"];
	[[self.viewsByName[@"orb left two__root"] layer] removeAnimationForKey:@"M22PlayerOrbAnimation_Opacity"];
	[[self.viewsByName[@"orb mid one__root"] layer] removeAnimationForKey:@"M22PlayerOrbAnimation_Opacity"];
	[[self.viewsByName[@"orb mid three__root"] layer] removeAnimationForKey:@"M22PlayerOrbAnimation_Opacity"];
	[[self.viewsByName[@"orb right two__root"] layer] removeAnimationForKey:@"M22PlayerOrbAnimation_Opacity"];
	[[self.viewsByName[@"orb left one__root"] layer] removeAnimationForKey:@"M22PlayerOrbAnimation_Opacity"];
	[[self.viewsByName[@"orb right three__root"] layer] removeAnimationForKey:@"M22PlayerOrbAnimation_Opacity"];
	[[self.viewsByName[@"orb mid two__root"] layer] removeAnimationForKey:@"M22PlayerOrbAnimation_Opacity"];
	[[self.viewsByName[@"orb left three__root"] layer] removeAnimationForKey:@"M22PlayerOrbAnimation_Opacity"];
	[[self.viewsByName[@"orb mid four__root"] layer] removeAnimationForKey:@"M22PlayerOrbAnimation_Opacity"];
}

- (void)removeAllAnimations
{
	for (UIView *view in self.viewsByName.allValues)
	{
		[view.layer removeAllAnimations];
	}
}

@end