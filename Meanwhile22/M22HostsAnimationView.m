//
// M22HostsAnimationView.m
// Generated by Core Animator version 1.3.2 on 12/9/16.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

#import "M22HostsAnimationView.h"

@interface M22HostsAnimationPassthroughView : UIView
@end
@implementation M22HostsAnimationPassthroughView
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent *)event {
    for ( UIView *subview in self.subviews ) {
        if ( [subview pointInside:[self convertPoint:point toView:subview] withEvent:event]) { return true; }
    }
    return false;
}
@end

@interface M22HostsAnimationView ()
@property (strong, nonatomic) NSMapTable *completionBlocksByAnimation;
@end

@implementation M22HostsAnimationView

#pragma mark - Life Cycle

- (instancetype)init
{
	return [self initWithFrame:CGRectMake(0,0,650,314)];
}

- (instancetype)initWithFrame:(CGRect)frame
{
	self = [super initWithFrame:frame];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

- (instancetype)initWithCoder:(NSCoder *)coder
{
	self = [super initWithCoder:coder];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

#pragma mark - Scaling

- (void)layoutSubviews
{
	[super layoutSubviews];

	UIView *scalingView = self.viewsByName[@"__scaling__"];
	float xScale = self.bounds.size.width / scalingView.bounds.size.width;
	float yScale = self.bounds.size.height / scalingView.bounds.size.height;
	switch (self.contentMode) {
		case UIViewContentModeScaleToFill:
			break;
		case UIViewContentModeScaleAspectFill:
		{
			float scale = MAX(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
		default:
		{
			float scale = MIN(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
	}
	scalingView.transform = CGAffineTransformMakeScale(xScale, yScale);
	scalingView.center = CGPointMake(CGRectGetMidX(self.bounds), CGRectGetMidY(self.bounds));
}

#pragma mark - Setup

- (void)setupHierarchy
{
	self.completionBlocksByAnimation = [NSMapTable mapTableWithKeyOptions:NSPointerFunctionsOpaqueMemory valueOptions:NSPointerFunctionsStrongMemory];
	NSMutableDictionary *viewsByName = [NSMutableDictionary dictionary];
	NSBundle *bundle = [NSBundle bundleForClass:[self class]];

	UIView *__scaling__ = [UIView new];
	__scaling__.bounds = CGRectMake(0, 0, 650, 314);
	__scaling__.center = CGPointMake(325.0, 157.0);
	__scaling__.layer.masksToBounds = YES;
	[self addSubview:__scaling__];
	viewsByName[@"__scaling__"] = __scaling__;

	M22HostsAnimationPassthroughView *hostsStar__root = [M22HostsAnimationPassthroughView new];
	M22HostsAnimationPassthroughView *hostsStar__xScale = [M22HostsAnimationPassthroughView new];
	M22HostsAnimationPassthroughView *hostsStar__yScale = [M22HostsAnimationPassthroughView new];
	UIImageView *hostsStar = [UIImageView new];
	UIImage *imgHostsStar = [UIImage imageNamed:@"hosts star.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgHostsStar == nil ) { NSLog(@"** Warning: Could not create image from 'hosts star.png'."); }
	hostsStar.image = imgHostsStar;
	hostsStar.contentMode = UIViewContentModeCenter;
	hostsStar.bounds = CGRectMake(0, 0, 134.0, 129.0);
	hostsStar__root.layer.position = CGPointMake(531.392, 97.037);
	hostsStar__xScale.transform = CGAffineTransformMakeScale(0.40, 1.00);
	hostsStar__yScale.transform = CGAffineTransformMakeScale(1.00, 0.40);
	hostsStar__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:hostsStar__root];
	[hostsStar__root addSubview:hostsStar__xScale];
	[hostsStar__xScale addSubview:hostsStar__yScale];
	[hostsStar__yScale addSubview:hostsStar];
	[__scaling__ addSubview:hostsStar__root];
	viewsByName[@"hosts star__root"] = hostsStar__root;
	viewsByName[@"hosts star__xScale"] = hostsStar__xScale;
	viewsByName[@"hosts star__yScale"] = hostsStar__yScale;
	viewsByName[@"hosts star"] = hostsStar;

	M22HostsAnimationPassthroughView *hostsWord__root = [M22HostsAnimationPassthroughView new];
	M22HostsAnimationPassthroughView *hostsWord__xScale = [M22HostsAnimationPassthroughView new];
	M22HostsAnimationPassthroughView *hostsWord__yScale = [M22HostsAnimationPassthroughView new];
	UIImageView *hostsWord = [UIImageView new];
	UIImage *imgHostsWord = [UIImage imageNamed:@"hosts word.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgHostsWord == nil ) { NSLog(@"** Warning: Could not create image from 'hosts word.png'."); }
	hostsWord.image = imgHostsWord;
	hostsWord.contentMode = UIViewContentModeCenter;
	hostsWord.bounds = CGRectMake(0, 0, 1133.0, 329.0);
	hostsWord__root.layer.position = CGPointMake(331.000, 226.531);
	hostsWord__xScale.transform = CGAffineTransformMakeScale(0.35, 1.00);
	hostsWord__yScale.transform = CGAffineTransformMakeScale(1.00, 0.35);
	hostsWord__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:hostsWord__root];
	[hostsWord__root addSubview:hostsWord__xScale];
	[hostsWord__xScale addSubview:hostsWord__yScale];
	[hostsWord__yScale addSubview:hostsWord];
	[__scaling__ addSubview:hostsWord__root];
	viewsByName[@"hosts word__root"] = hostsWord__root;
	viewsByName[@"hosts word__xScale"] = hostsWord__xScale;
	viewsByName[@"hosts word__yScale"] = hostsWord__yScale;
	viewsByName[@"hosts word"] = hostsWord;

	M22HostsAnimationPassthroughView *heroicWord__root = [M22HostsAnimationPassthroughView new];
	M22HostsAnimationPassthroughView *heroicWord__xScale = [M22HostsAnimationPassthroughView new];
	M22HostsAnimationPassthroughView *heroicWord__yScale = [M22HostsAnimationPassthroughView new];
	UIImageView *heroicWord = [UIImageView new];
	UIImage *imgHeroicWord = [UIImage imageNamed:@"heroic word.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgHeroicWord == nil ) { NSLog(@"** Warning: Could not create image from 'heroic word.png'."); }
	heroicWord.image = imgHeroicWord;
	heroicWord.contentMode = UIViewContentModeCenter;
	heroicWord.bounds = CGRectMake(0, 0, 1175.0, 329.0);
	heroicWord__root.layer.position = CGPointMake(338.057, 99.425);
	heroicWord__xScale.transform = CGAffineTransformMakeScale(0.35, 1.00);
	heroicWord__yScale.transform = CGAffineTransformMakeScale(1.00, 0.35);
	heroicWord__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:heroicWord__root];
	[heroicWord__root addSubview:heroicWord__xScale];
	[heroicWord__xScale addSubview:heroicWord__yScale];
	[heroicWord__yScale addSubview:heroicWord];
	[__scaling__ addSubview:heroicWord__root];
	viewsByName[@"heroic word__root"] = heroicWord__root;
	viewsByName[@"heroic word__xScale"] = heroicWord__xScale;
	viewsByName[@"heroic word__yScale"] = heroicWord__yScale;
	viewsByName[@"heroic word"] = heroicWord;

	M22HostsAnimationPassthroughView *hostsArticle__root = [M22HostsAnimationPassthroughView new];
	M22HostsAnimationPassthroughView *hostsArticle__xScale = [M22HostsAnimationPassthroughView new];
	M22HostsAnimationPassthroughView *hostsArticle__yScale = [M22HostsAnimationPassthroughView new];
	UIImageView *hostsArticle = [UIImageView new];
	UIImage *imgHostsArticle = [UIImage imageNamed:@"hosts article.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgHostsArticle == nil ) { NSLog(@"** Warning: Could not create image from 'hosts article.png'."); }
	hostsArticle.image = imgHostsArticle;
	hostsArticle.contentMode = UIViewContentModeCenter;
	hostsArticle.bounds = CGRectMake(0, 0, 93.0, 417.0);
	hostsArticle__root.layer.position = CGPointMake(98.391, 157.000);
	hostsArticle__xScale.transform = CGAffineTransformMakeScale(0.45, 1.00);
	hostsArticle__yScale.transform = CGAffineTransformMakeScale(1.00, 0.45);
	hostsArticle__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:hostsArticle__root];
	[hostsArticle__root addSubview:hostsArticle__xScale];
	[hostsArticle__xScale addSubview:hostsArticle__yScale];
	[hostsArticle__yScale addSubview:hostsArticle];
	[__scaling__ addSubview:hostsArticle__root];
	viewsByName[@"hosts article__root"] = hostsArticle__root;
	viewsByName[@"hosts article__xScale"] = hostsArticle__xScale;
	viewsByName[@"hosts article__yScale"] = hostsArticle__yScale;
	viewsByName[@"hosts article"] = hostsArticle;

	M22HostsAnimationPassthroughView *hostsFlash__root = [M22HostsAnimationPassthroughView new];
	M22HostsAnimationPassthroughView *hostsFlash__xScale = [M22HostsAnimationPassthroughView new];
	M22HostsAnimationPassthroughView *hostsFlash__yScale = [M22HostsAnimationPassthroughView new];
	UIImageView *hostsFlash = [UIImageView new];
	UIImage *imgHostsFlash = [UIImage imageNamed:@"hosts flash.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgHostsFlash == nil ) { NSLog(@"** Warning: Could not create image from 'hosts flash.png'."); }
	hostsFlash.image = imgHostsFlash;
	hostsFlash.contentMode = UIViewContentModeCenter;
	hostsFlash.bounds = CGRectMake(0, 0, 538.0, 531.0);
	hostsFlash__root.layer.position = CGPointMake(109.813, 39.697);
	hostsFlash__xScale.transform = CGAffineTransformMakeScale(0.03, 1.00);
	hostsFlash__yScale.transform = CGAffineTransformMakeScale(1.00, 0.03);
	hostsFlash__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:hostsFlash__root];
	[hostsFlash__root addSubview:hostsFlash__xScale];
	[hostsFlash__xScale addSubview:hostsFlash__yScale];
	[hostsFlash__yScale addSubview:hostsFlash];
	[__scaling__ addSubview:hostsFlash__root];
	viewsByName[@"hosts flash__root"] = hostsFlash__root;
	viewsByName[@"hosts flash__xScale"] = hostsFlash__xScale;
	viewsByName[@"hosts flash__yScale"] = hostsFlash__yScale;
	viewsByName[@"hosts flash"] = hostsFlash;

	self.viewsByName = viewsByName;
}

#pragma mark - M22HostsAnimation

- (void)addM22HostsAnimation
{
	[self addM22HostsAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO completion:NULL];
}

- (void)addM22HostsAnimationWithCompletion:(void (^)(BOOL finished))completionBlock
{
	[self addM22HostsAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO completion:completionBlock];
}

- (void)addM22HostsAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion
{
	[self addM22HostsAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion completion:NULL];
}

- (void)addM22HostsAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion completion:(void (^)(BOOL finished))completionBlock
{
	[self addM22HostsAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion completion:completionBlock];
}

- (void)addM22HostsAnimationWithBeginTime:(CFTimeInterval)beginTime andFillMode:(NSString *)fillMode andRemoveOnCompletion:(BOOL)removedOnCompletion completion:(void (^)(BOOL finished))completionBlock
{
	CAMediaTimingFunction *linearTiming = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];
	CAMediaTimingFunction *instantTiming = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionDefault];

	if (completionBlock)
	{
		CABasicAnimation *representativeAnimation = [CABasicAnimation animationWithKeyPath:@"not.a.real.key"];
		representativeAnimation.duration = 7.500;
		representativeAnimation.delegate = self;
		[self.layer addAnimation:representativeAnimation forKey:@"M22HostsAnimation"];
		[self.completionBlocksByAnimation setObject:completionBlock forKey:[self.layer animationForKey:@"M22HostsAnimation"]];
	}

	CAKeyframeAnimation *heroicWordTranslationXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.x"];
	heroicWordTranslationXAnimation.duration = 7.500;
	heroicWordTranslationXAnimation.values = @[@(0.000), @(0.000)];
	heroicWordTranslationXAnimation.keyTimes = @[@(0.000), @(1.000)];
	heroicWordTranslationXAnimation.timingFunctions = @[linearTiming];
	heroicWordTranslationXAnimation.repeatCount = HUGE_VALF;
	heroicWordTranslationXAnimation.beginTime = beginTime;
	heroicWordTranslationXAnimation.fillMode = fillMode;
	heroicWordTranslationXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"heroic word__root"] layer] addAnimation:heroicWordTranslationXAnimation forKey:@"M22HostsAnimation_TranslationX"];

	CAKeyframeAnimation *heroicWordTranslationYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.y"];
	heroicWordTranslationYAnimation.duration = 7.500;
	heroicWordTranslationYAnimation.values = @[@(0.000), @(0.000)];
	heroicWordTranslationYAnimation.keyTimes = @[@(0.000), @(1.000)];
	heroicWordTranslationYAnimation.timingFunctions = @[linearTiming];
	heroicWordTranslationYAnimation.repeatCount = HUGE_VALF;
	heroicWordTranslationYAnimation.beginTime = beginTime;
	heroicWordTranslationYAnimation.fillMode = fillMode;
	heroicWordTranslationYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"heroic word__root"] layer] addAnimation:heroicWordTranslationYAnimation forKey:@"M22HostsAnimation_TranslationY"];

	CAKeyframeAnimation *hostsStarZPositionAnimation = [CAKeyframeAnimation animationWithKeyPath:@"zPosition"];
	hostsStarZPositionAnimation.duration = 3.500;
	hostsStarZPositionAnimation.values = @[@(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000), @(0.000)];
	hostsStarZPositionAnimation.keyTimes = @[@(0.000), @(0.071), @(0.071), @(0.214), @(0.214), @(0.357), @(0.357), @(0.500), @(0.500), @(0.643), @(0.643), @(0.786), @(0.786), @(0.928), @(0.929), @(1.000), @(1.000)];
	hostsStarZPositionAnimation.timingFunctions = @[instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming];
	hostsStarZPositionAnimation.beginTime = beginTime;
	hostsStarZPositionAnimation.fillMode = fillMode;
	hostsStarZPositionAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts star"] layer] addAnimation:hostsStarZPositionAnimation forKey:@"M22HostsAnimation_ZPosition"];

	CAKeyframeAnimation *hostsWordZPositionAnimation = [CAKeyframeAnimation animationWithKeyPath:@"zPosition"];
	hostsWordZPositionAnimation.duration = 3.500;
	hostsWordZPositionAnimation.values = @[@(2.000), @(2.000), @(1.000), @(1.000), @(2.000), @(2.000), @(1.000), @(1.000), @(2.000), @(2.000), @(1.000), @(1.000), @(2.000), @(2.000), @(1.000), @(1.000), @(1.000)];
	hostsWordZPositionAnimation.keyTimes = @[@(0.000), @(0.071), @(0.071), @(0.214), @(0.214), @(0.357), @(0.357), @(0.500), @(0.500), @(0.643), @(0.643), @(0.786), @(0.786), @(0.928), @(0.929), @(1.000), @(1.000)];
	hostsWordZPositionAnimation.timingFunctions = @[instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming];
	hostsWordZPositionAnimation.beginTime = beginTime;
	hostsWordZPositionAnimation.fillMode = fillMode;
	hostsWordZPositionAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts word"] layer] addAnimation:hostsWordZPositionAnimation forKey:@"M22HostsAnimation_ZPosition"];

	CAKeyframeAnimation *heroicWordZPositionAnimation = [CAKeyframeAnimation animationWithKeyPath:@"zPosition"];
	heroicWordZPositionAnimation.duration = 3.500;
	heroicWordZPositionAnimation.values = @[@(3.000), @(3.000), @(2.000), @(2.000), @(3.000), @(3.000), @(2.000), @(2.000), @(3.000), @(3.000), @(2.000), @(2.000), @(3.000), @(3.000), @(2.000), @(2.000), @(2.000)];
	heroicWordZPositionAnimation.keyTimes = @[@(0.000), @(0.071), @(0.071), @(0.214), @(0.214), @(0.357), @(0.357), @(0.500), @(0.500), @(0.643), @(0.643), @(0.786), @(0.786), @(0.928), @(0.929), @(1.000), @(1.000)];
	heroicWordZPositionAnimation.timingFunctions = @[instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming];
	heroicWordZPositionAnimation.beginTime = beginTime;
	heroicWordZPositionAnimation.fillMode = fillMode;
	heroicWordZPositionAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"heroic word"] layer] addAnimation:heroicWordZPositionAnimation forKey:@"M22HostsAnimation_ZPosition"];

	CAKeyframeAnimation *hostsArticleZPositionAnimation = [CAKeyframeAnimation animationWithKeyPath:@"zPosition"];
	hostsArticleZPositionAnimation.duration = 3.500;
	hostsArticleZPositionAnimation.values = @[@(4.000), @(4.000), @(3.000), @(3.000), @(4.000), @(4.000), @(3.000), @(3.000), @(4.000), @(4.000), @(3.000), @(3.000), @(4.000), @(4.000), @(3.000), @(3.000), @(3.000)];
	hostsArticleZPositionAnimation.keyTimes = @[@(0.000), @(0.071), @(0.071), @(0.214), @(0.214), @(0.357), @(0.357), @(0.500), @(0.500), @(0.643), @(0.643), @(0.786), @(0.786), @(0.928), @(0.929), @(1.000), @(1.000)];
	hostsArticleZPositionAnimation.timingFunctions = @[instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming];
	hostsArticleZPositionAnimation.beginTime = beginTime;
	hostsArticleZPositionAnimation.fillMode = fillMode;
	hostsArticleZPositionAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts article"] layer] addAnimation:hostsArticleZPositionAnimation forKey:@"M22HostsAnimation_ZPosition"];

	CAKeyframeAnimation *hostsFlashZPositionAnimation = [CAKeyframeAnimation animationWithKeyPath:@"zPosition"];
	hostsFlashZPositionAnimation.duration = 3.500;
	hostsFlashZPositionAnimation.values = @[@(1.000), @(1.000), @(4.000), @(4.000), @(1.000), @(1.000), @(4.000), @(4.000), @(1.000), @(1.000), @(4.000), @(4.000), @(1.000), @(1.000), @(4.000), @(4.000), @(4.000)];
	hostsFlashZPositionAnimation.keyTimes = @[@(0.000), @(0.071), @(0.071), @(0.214), @(0.214), @(0.357), @(0.357), @(0.500), @(0.500), @(0.643), @(0.643), @(0.786), @(0.786), @(0.928), @(0.929), @(1.000), @(1.000)];
	hostsFlashZPositionAnimation.timingFunctions = @[instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming, instantTiming];
	hostsFlashZPositionAnimation.beginTime = beginTime;
	hostsFlashZPositionAnimation.fillMode = fillMode;
	hostsFlashZPositionAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts flash"] layer] addAnimation:hostsFlashZPositionAnimation forKey:@"M22HostsAnimation_ZPosition"];

	CAKeyframeAnimation *hostsWordTranslationXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.x"];
	hostsWordTranslationXAnimation.duration = 7.500;
	hostsWordTranslationXAnimation.values = @[@(0.000), @(0.000)];
	hostsWordTranslationXAnimation.keyTimes = @[@(0.000), @(1.000)];
	hostsWordTranslationXAnimation.timingFunctions = @[linearTiming];
	hostsWordTranslationXAnimation.repeatCount = HUGE_VALF;
	hostsWordTranslationXAnimation.beginTime = beginTime;
	hostsWordTranslationXAnimation.fillMode = fillMode;
	hostsWordTranslationXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts word__root"] layer] addAnimation:hostsWordTranslationXAnimation forKey:@"M22HostsAnimation_TranslationX"];

	CAKeyframeAnimation *hostsWordTranslationYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.y"];
	hostsWordTranslationYAnimation.duration = 7.500;
	hostsWordTranslationYAnimation.values = @[@(0.000), @(0.000)];
	hostsWordTranslationYAnimation.keyTimes = @[@(0.000), @(1.000)];
	hostsWordTranslationYAnimation.timingFunctions = @[linearTiming];
	hostsWordTranslationYAnimation.repeatCount = HUGE_VALF;
	hostsWordTranslationYAnimation.beginTime = beginTime;
	hostsWordTranslationYAnimation.fillMode = fillMode;
	hostsWordTranslationYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts word__root"] layer] addAnimation:hostsWordTranslationYAnimation forKey:@"M22HostsAnimation_TranslationY"];

	CAKeyframeAnimation *hostsFlashOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	hostsFlashOpacityAnimation.duration = 7.500;
	hostsFlashOpacityAnimation.values = @[@(1.000), @(1.000), @(0.000), @(0.000)];
	hostsFlashOpacityAnimation.keyTimes = @[@(0.000), @(0.493), @(0.500), @(1.000)];
	hostsFlashOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming];
	hostsFlashOpacityAnimation.repeatCount = HUGE_VALF;
	hostsFlashOpacityAnimation.beginTime = beginTime;
	hostsFlashOpacityAnimation.fillMode = fillMode;
	hostsFlashOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts flash__root"] layer] addAnimation:hostsFlashOpacityAnimation forKey:@"M22HostsAnimation_Opacity"];

	CAKeyframeAnimation *hostsFlashScaleXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.x"];
	hostsFlashScaleXAnimation.duration = 7.500;
	hostsFlashScaleXAnimation.values = @[@(0.030), @(0.050), @(0.100), @(0.050), @(0.020), @(0.050), @(0.100), @(0.050), @(0.030), @(0.050), @(0.100), @(0.050), @(0.020), @(0.050), @(0.400), @(0.020), @(0.020)];
	hostsFlashScaleXAnimation.keyTimes = @[@(0.000), @(0.033), @(0.073), @(0.100), @(0.133), @(0.167), @(0.206), @(0.233), @(0.267), @(0.300), @(0.340), @(0.367), @(0.400), @(0.433), @(0.467), @(0.500), @(1.000)];
	hostsFlashScaleXAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	hostsFlashScaleXAnimation.repeatCount = HUGE_VALF;
	hostsFlashScaleXAnimation.beginTime = beginTime;
	hostsFlashScaleXAnimation.fillMode = fillMode;
	hostsFlashScaleXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts flash__xScale"] layer] addAnimation:hostsFlashScaleXAnimation forKey:@"M22HostsAnimation_ScaleX"];

	CAKeyframeAnimation *hostsFlashScaleYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.y"];
	hostsFlashScaleYAnimation.duration = 7.500;
	hostsFlashScaleYAnimation.values = @[@(0.030), @(0.050), @(0.100), @(0.050), @(0.020), @(0.050), @(0.100), @(0.050), @(0.030), @(0.050), @(0.100), @(0.050), @(0.020), @(0.050), @(0.400), @(0.020), @(0.020)];
	hostsFlashScaleYAnimation.keyTimes = @[@(0.000), @(0.033), @(0.073), @(0.100), @(0.133), @(0.167), @(0.206), @(0.233), @(0.267), @(0.300), @(0.340), @(0.367), @(0.400), @(0.433), @(0.467), @(0.500), @(1.000)];
	hostsFlashScaleYAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	hostsFlashScaleYAnimation.repeatCount = HUGE_VALF;
	hostsFlashScaleYAnimation.beginTime = beginTime;
	hostsFlashScaleYAnimation.fillMode = fillMode;
	hostsFlashScaleYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts flash__yScale"] layer] addAnimation:hostsFlashScaleYAnimation forKey:@"M22HostsAnimation_ScaleY"];

	CAKeyframeAnimation *hostsFlashTranslationXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.x"];
	hostsFlashTranslationXAnimation.duration = 7.500;
	hostsFlashTranslationXAnimation.values = @[@(-8.478), @(28.939), @(-32.378), @(165.800), @(103.252), @(317.443), @(283.020), @(404.052), @(429.537), @(500.274)];
	hostsFlashTranslationXAnimation.keyTimes = @[@(0.000), @(0.033), @(0.100), @(0.167), @(0.233), @(0.300), @(0.367), @(0.433), @(0.467), @(1.000)];
	hostsFlashTranslationXAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	hostsFlashTranslationXAnimation.repeatCount = HUGE_VALF;
	hostsFlashTranslationXAnimation.beginTime = beginTime;
	hostsFlashTranslationXAnimation.fillMode = fillMode;
	hostsFlashTranslationXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts flash__root"] layer] addAnimation:hostsFlashTranslationXAnimation forKey:@"M22HostsAnimation_TranslationX"];

	CAKeyframeAnimation *hostsFlashTranslationYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.y"];
	hostsFlashTranslationYAnimation.duration = 7.500;
	hostsFlashTranslationYAnimation.values = @[@(33.615), @(-30.000), @(245.260), @(-30.000), @(266.000), @(-30.502), @(266.000), @(47.333), @(67.420), @(46.843)];
	hostsFlashTranslationYAnimation.keyTimes = @[@(0.000), @(0.033), @(0.100), @(0.167), @(0.233), @(0.300), @(0.367), @(0.433), @(0.467), @(1.000)];
	hostsFlashTranslationYAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	hostsFlashTranslationYAnimation.repeatCount = HUGE_VALF;
	hostsFlashTranslationYAnimation.beginTime = beginTime;
	hostsFlashTranslationYAnimation.fillMode = fillMode;
	hostsFlashTranslationYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts flash__root"] layer] addAnimation:hostsFlashTranslationYAnimation forKey:@"M22HostsAnimation_TranslationY"];

	CAKeyframeAnimation *hostsArticleTranslationXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.x"];
	hostsArticleTranslationXAnimation.duration = 7.500;
	hostsArticleTranslationXAnimation.values = @[@(0.000), @(0.000)];
	hostsArticleTranslationXAnimation.keyTimes = @[@(0.000), @(1.000)];
	hostsArticleTranslationXAnimation.timingFunctions = @[linearTiming];
	hostsArticleTranslationXAnimation.repeatCount = HUGE_VALF;
	hostsArticleTranslationXAnimation.beginTime = beginTime;
	hostsArticleTranslationXAnimation.fillMode = fillMode;
	hostsArticleTranslationXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts article__root"] layer] addAnimation:hostsArticleTranslationXAnimation forKey:@"M22HostsAnimation_TranslationX"];

	CAKeyframeAnimation *hostsArticleTranslationYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.y"];
	hostsArticleTranslationYAnimation.duration = 7.500;
	hostsArticleTranslationYAnimation.values = @[@(0.000), @(0.000)];
	hostsArticleTranslationYAnimation.keyTimes = @[@(0.000), @(1.000)];
	hostsArticleTranslationYAnimation.timingFunctions = @[linearTiming];
	hostsArticleTranslationYAnimation.repeatCount = HUGE_VALF;
	hostsArticleTranslationYAnimation.beginTime = beginTime;
	hostsArticleTranslationYAnimation.fillMode = fillMode;
	hostsArticleTranslationYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts article__root"] layer] addAnimation:hostsArticleTranslationYAnimation forKey:@"M22HostsAnimation_TranslationY"];

	CAKeyframeAnimation *hostsStarOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	hostsStarOpacityAnimation.duration = 7.500;
	hostsStarOpacityAnimation.values = @[@(0.000), @(0.010), @(1.000), @(1.000), @(0.000), @(0.000)];
	hostsStarOpacityAnimation.keyTimes = @[@(0.000), @(0.467), @(0.500), @(0.733), @(0.773), @(1.000)];
	hostsStarOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming, linearTiming];
	hostsStarOpacityAnimation.repeatCount = HUGE_VALF;
	hostsStarOpacityAnimation.beginTime = beginTime;
	hostsStarOpacityAnimation.fillMode = fillMode;
	hostsStarOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"hosts star__root"] layer] addAnimation:hostsStarOpacityAnimation forKey:@"M22HostsAnimation_Opacity"];
}

- (void)removeM22HostsAnimation
{
	[self.layer removeAnimationForKey:@"M22HostsAnimation"];
	[[self.viewsByName[@"heroic word__root"] layer] removeAnimationForKey:@"M22HostsAnimation_TranslationX"];
	[[self.viewsByName[@"heroic word__root"] layer] removeAnimationForKey:@"M22HostsAnimation_TranslationY"];
	[[self.viewsByName[@"hosts star__root"] layer] removeAnimationForKey:@"M22HostsAnimation_ZPosition"];
	[[self.viewsByName[@"hosts word__root"] layer] removeAnimationForKey:@"M22HostsAnimation_ZPosition"];
	[[self.viewsByName[@"heroic word__root"] layer] removeAnimationForKey:@"M22HostsAnimation_ZPosition"];
	[[self.viewsByName[@"hosts article__root"] layer] removeAnimationForKey:@"M22HostsAnimation_ZPosition"];
	[[self.viewsByName[@"hosts flash__root"] layer] removeAnimationForKey:@"M22HostsAnimation_ZPosition"];
	[[self.viewsByName[@"hosts word__root"] layer] removeAnimationForKey:@"M22HostsAnimation_TranslationX"];
	[[self.viewsByName[@"hosts word__root"] layer] removeAnimationForKey:@"M22HostsAnimation_TranslationY"];
	[[self.viewsByName[@"hosts flash__root"] layer] removeAnimationForKey:@"M22HostsAnimation_Opacity"];
	[[self.viewsByName[@"hosts flash__xScale"] layer] removeAnimationForKey:@"M22HostsAnimation_ScaleX"];
	[[self.viewsByName[@"hosts flash__yScale"] layer] removeAnimationForKey:@"M22HostsAnimation_ScaleY"];
	[[self.viewsByName[@"hosts flash__root"] layer] removeAnimationForKey:@"M22HostsAnimation_TranslationX"];
	[[self.viewsByName[@"hosts flash__root"] layer] removeAnimationForKey:@"M22HostsAnimation_TranslationY"];
	[[self.viewsByName[@"hosts article__root"] layer] removeAnimationForKey:@"M22HostsAnimation_TranslationX"];
	[[self.viewsByName[@"hosts article__root"] layer] removeAnimationForKey:@"M22HostsAnimation_TranslationY"];
	[[self.viewsByName[@"hosts star__root"] layer] removeAnimationForKey:@"M22HostsAnimation_Opacity"];
}

- (void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag
{
	void (^completion)(BOOL) = [self.completionBlocksByAnimation objectForKey:anim];
	[self.completionBlocksByAnimation removeObjectForKey:anim];
	if (completion)
	{
		completion(flag);
	}
}

- (void)removeAllAnimations
{
	for (UIView *view in self.viewsByName.allValues)
	{
		[view.layer removeAllAnimations];
	}
	[self.layer removeAnimationForKey:@"M22HostsAnimation"];
}

@end