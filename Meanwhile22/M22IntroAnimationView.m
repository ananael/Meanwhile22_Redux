//
// M22IntroAnimationView.m
// Generated by Core Animator version 1.3.2 on 10/6/16.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

#import "M22IntroAnimationView.h"

@interface M22IntroAnimationPassthroughView : UIView
@end
@implementation M22IntroAnimationPassthroughView
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent *)event {
    for ( UIView *subview in self.subviews ) {
        if ( [subview pointInside:[self convertPoint:point toView:subview] withEvent:event]) { return true; }
    }
    return false;
}
@end

@interface M22IntroAnimationView ()
@property (strong, nonatomic) NSMapTable *completionBlocksByAnimation;
@end

@implementation M22IntroAnimationView

#pragma mark - Life Cycle

- (instancetype)init
{
	return [self initWithFrame:CGRectMake(0,0,1536,2048)];
}

- (instancetype)initWithFrame:(CGRect)frame
{
	self = [super initWithFrame:frame];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

- (instancetype)initWithCoder:(NSCoder *)coder
{
	self = [super initWithCoder:coder];
	if (self)
	{
		[self setupHierarchy];
	}
	return self;
}

#pragma mark - Scaling

- (void)layoutSubviews
{
	[super layoutSubviews];

	UIView *scalingView = self.viewsByName[@"__scaling__"];
	float xScale = self.bounds.size.width / scalingView.bounds.size.width;
	float yScale = self.bounds.size.height / scalingView.bounds.size.height;
	switch (self.contentMode) {
		case UIViewContentModeScaleToFill:
			break;
		case UIViewContentModeScaleAspectFill:
		{
			float scale = MAX(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
		default:
		{
			float scale = MIN(xScale, yScale);
			xScale = scale;
			yScale = scale;
			break;
		}
	}
	scalingView.transform = CGAffineTransformMakeScale(xScale, yScale);
	scalingView.center = CGPointMake(CGRectGetMidX(self.bounds), CGRectGetMidY(self.bounds));
}

#pragma mark - Setup

- (void)setupHierarchy
{
	self.completionBlocksByAnimation = [NSMapTable mapTableWithKeyOptions:NSPointerFunctionsOpaqueMemory valueOptions:NSPointerFunctionsStrongMemory];
	NSMutableDictionary *viewsByName = [NSMutableDictionary dictionary];
	NSBundle *bundle = [NSBundle bundleForClass:[self class]];

	UIView *__scaling__ = [UIView new];
	__scaling__.bounds = CGRectMake(0, 0, 1536, 2048);
	__scaling__.center = CGPointMake(768.0, 1024.0);
	__scaling__.layer.masksToBounds = YES;
	[self addSubview:__scaling__];
	viewsByName[@"__scaling__"] = __scaling__;

	M22IntroAnimationPassthroughView *orangeBkgd__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *orangeBkgd__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *orangeBkgd__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *orangeBkgd = [UIImageView new];
	UIImage *imgOrangeBkgd = [UIImage imageNamed:@"orange bkgd.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgOrangeBkgd == nil ) { NSLog(@"** Warning: Could not create image from 'orange bkgd.png'."); }
	orangeBkgd.image = imgOrangeBkgd;
	orangeBkgd.contentMode = UIViewContentModeCenter;
	orangeBkgd.bounds = CGRectMake(0, 0, 2133.0, 2844.0);
	orangeBkgd__root.layer.position = CGPointMake(767.942, 1023.000);
	orangeBkgd__xScale.transform = CGAffineTransformMakeScale(0.72, 1.00);
	orangeBkgd__yScale.transform = CGAffineTransformMakeScale(1.00, 0.72);
	orangeBkgd__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:orangeBkgd__root];
	[orangeBkgd__root addSubview:orangeBkgd__xScale];
	[orangeBkgd__xScale addSubview:orangeBkgd__yScale];
	[orangeBkgd__yScale addSubview:orangeBkgd];
	[__scaling__ addSubview:orangeBkgd__root];
	viewsByName[@"orange bkgd__root"] = orangeBkgd__root;
	viewsByName[@"orange bkgd__xScale"] = orangeBkgd__xScale;
	viewsByName[@"orange bkgd__yScale"] = orangeBkgd__yScale;
	viewsByName[@"orange bkgd"] = orangeBkgd;

	M22IntroAnimationPassthroughView *burst__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *burst__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *burst__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *burst = [UIImageView new];
	UIImage *imgBurst = [UIImage imageNamed:@"burst.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgBurst == nil ) { NSLog(@"** Warning: Could not create image from 'burst.png'."); }
	burst.image = imgBurst;
	burst.contentMode = UIViewContentModeCenter;
	burst.bounds = CGRectMake(0, 0, 3066.0, 1482.0);
	burst__root.layer.position = CGPointMake(768.000, 1329.087);
	burst__xScale.transform = CGAffineTransformMakeScale(0.72, 1.00);
	burst__yScale.transform = CGAffineTransformMakeScale(1.00, 0.72);
	burst__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:burst__root];
	[burst__root addSubview:burst__xScale];
	[burst__xScale addSubview:burst__yScale];
	[burst__yScale addSubview:burst];
	[__scaling__ addSubview:burst__root];
	viewsByName[@"burst__root"] = burst__root;
	viewsByName[@"burst__xScale"] = burst__xScale;
	viewsByName[@"burst__yScale"] = burst__yScale;
	viewsByName[@"burst"] = burst;

	M22IntroAnimationPassthroughView *cap__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *cap__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *cap__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *cap = [UIImageView new];
	UIImage *imgCap = [UIImage imageNamed:@"cap.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgCap == nil ) { NSLog(@"** Warning: Could not create image from 'cap.png'."); }
	cap.image = imgCap;
	cap.contentMode = UIViewContentModeCenter;
	cap.bounds = CGRectMake(0, 0, 1031.0, 1058.0);
	cap__root.layer.position = CGPointMake(257.750, 1267.206);
	cap__xScale.transform = CGAffineTransformMakeScale(0.50, 1.00);
	cap__yScale.transform = CGAffineTransformMakeScale(1.00, 0.50);
	cap__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:cap__root];
	[cap__root addSubview:cap__xScale];
	[cap__xScale addSubview:cap__yScale];
	[cap__yScale addSubview:cap];
	[__scaling__ addSubview:cap__root];
	viewsByName[@"cap__root"] = cap__root;
	viewsByName[@"cap__xScale"] = cap__xScale;
	viewsByName[@"cap__yScale"] = cap__yScale;
	viewsByName[@"cap"] = cap;

	M22IntroAnimationPassthroughView *ralf__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *ralf__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *ralf__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *ralf = [UIImageView new];
	UIImage *imgRalf = [UIImage imageNamed:@"ralf.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgRalf == nil ) { NSLog(@"** Warning: Could not create image from 'ralf.png'."); }
	ralf.image = imgRalf;
	ralf.contentMode = UIViewContentModeCenter;
	ralf.bounds = CGRectMake(0, 0, 1031.0, 1058.0);
	ralf__root.layer.position = CGPointMake(1278.250, 1267.680);
	ralf__xScale.transform = CGAffineTransformMakeScale(0.50, 1.00);
	ralf__yScale.transform = CGAffineTransformMakeScale(1.00, 0.50);
	ralf__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:ralf__root];
	[ralf__root addSubview:ralf__xScale];
	[ralf__xScale addSubview:ralf__yScale];
	[ralf__yScale addSubview:ralf];
	[__scaling__ addSubview:ralf__root];
	viewsByName[@"ralf__root"] = ralf__root;
	viewsByName[@"ralf__xScale"] = ralf__xScale;
	viewsByName[@"ralf__yScale"] = ralf__yScale;
	viewsByName[@"ralf"] = ralf;

	M22IntroAnimationPassthroughView *mfg__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *mfg__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *mfg__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *mfg = [UIImageView new];
	UIImage *imgMfg = [UIImage imageNamed:@"mfg.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgMfg == nil ) { NSLog(@"** Warning: Could not create image from 'mfg.png'."); }
	mfg.image = imgMfg;
	mfg.contentMode = UIViewContentModeCenter;
	mfg.bounds = CGRectMake(0, 0, 1031.0, 1058.0);
	mfg__root.layer.position = CGPointMake(768.000, 1267.028);
	mfg__xScale.transform = CGAffineTransformMakeScale(0.50, 1.00);
	mfg__yScale.transform = CGAffineTransformMakeScale(1.00, 0.50);
	mfg__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:mfg__root];
	[mfg__root addSubview:mfg__xScale];
	[mfg__xScale addSubview:mfg__yScale];
	[mfg__yScale addSubview:mfg];
	[__scaling__ addSubview:mfg__root];
	viewsByName[@"mfg__root"] = mfg__root;
	viewsByName[@"mfg__xScale"] = mfg__xScale;
	viewsByName[@"mfg__yScale"] = mfg__yScale;
	viewsByName[@"mfg"] = mfg;

	M22IntroAnimationPassthroughView *capStar__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *capStar__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *capStar__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *capStar = [UIImageView new];
	UIImage *imgCapStar = [UIImage imageNamed:@"cap star.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgCapStar == nil ) { NSLog(@"** Warning: Could not create image from 'cap star.png'."); }
	capStar.image = imgCapStar;
	capStar.contentMode = UIViewContentModeCenter;
	capStar.bounds = CGRectMake(0, 0, 508.0, 483.0);
	capStar__root.layer.position = CGPointMake(251.757, 1452.679);
	capStar__xScale.transform = CGAffineTransformMakeScale(0.50, 1.00);
	capStar__yScale.transform = CGAffineTransformMakeScale(1.00, 0.50);
	capStar__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:capStar__root];
	[capStar__root addSubview:capStar__xScale];
	[capStar__xScale addSubview:capStar__yScale];
	[capStar__yScale addSubview:capStar];
	[__scaling__ addSubview:capStar__root];
	viewsByName[@"cap star__root"] = capStar__root;
	viewsByName[@"cap star__xScale"] = capStar__xScale;
	viewsByName[@"cap star__yScale"] = capStar__yScale;
	viewsByName[@"cap star"] = capStar;

	M22IntroAnimationPassthroughView *ralfBird__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *ralfBird__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *ralfBird__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *ralfBird = [UIImageView new];
	UIImage *imgRalfBird = [UIImage imageNamed:@"ralf bird.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgRalfBird == nil ) { NSLog(@"** Warning: Could not create image from 'ralf bird.png'."); }
	ralfBird.image = imgRalfBird;
	ralfBird.contentMode = UIViewContentModeCenter;
	ralfBird.bounds = CGRectMake(0, 0, 914.0, 702.0);
	ralfBird__root.layer.position = CGPointMake(1287.500, 1466.715);
	ralfBird__xScale.transform = CGAffineTransformMakeScale(0.50, 1.00);
	ralfBird__yScale.transform = CGAffineTransformMakeScale(1.00, 0.50);
	ralfBird__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:ralfBird__root];
	[ralfBird__root addSubview:ralfBird__xScale];
	[ralfBird__xScale addSubview:ralfBird__yScale];
	[ralfBird__yScale addSubview:ralfBird];
	[__scaling__ addSubview:ralfBird__root];
	viewsByName[@"ralf bird__root"] = ralfBird__root;
	viewsByName[@"ralf bird__xScale"] = ralfBird__xScale;
	viewsByName[@"ralf bird__yScale"] = ralfBird__yScale;
	viewsByName[@"ralf bird"] = ralfBird;

	M22IntroAnimationPassthroughView *mfgBolt__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *mfgBolt__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *mfgBolt__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *mfgBolt = [UIImageView new];
	UIImage *imgMfgBolt = [UIImage imageNamed:@"mfg bolt.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgMfgBolt == nil ) { NSLog(@"** Warning: Could not create image from 'mfg bolt.png'."); }
	mfgBolt.image = imgMfgBolt;
	mfgBolt.contentMode = UIViewContentModeCenter;
	mfgBolt.bounds = CGRectMake(0, 0, 329.0, 686.0);
	mfgBolt__root.layer.position = CGPointMake(768.000, 1492.276);
	mfgBolt__xScale.transform = CGAffineTransformMakeScale(0.50, 1.00);
	mfgBolt__yScale.transform = CGAffineTransformMakeScale(1.00, 0.50);
	mfgBolt__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:mfgBolt__root];
	[mfgBolt__root addSubview:mfgBolt__xScale];
	[mfgBolt__xScale addSubview:mfgBolt__yScale];
	[mfgBolt__yScale addSubview:mfgBolt];
	[__scaling__ addSubview:mfgBolt__root];
	viewsByName[@"mfg bolt__root"] = mfgBolt__root;
	viewsByName[@"mfg bolt__xScale"] = mfgBolt__xScale;
	viewsByName[@"mfg bolt__yScale"] = mfgBolt__yScale;
	viewsByName[@"mfg bolt"] = mfgBolt;

	M22IntroAnimationPassthroughView *_22PL__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *_22PL__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *_22PL__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *_22PL = [UIImageView new];
	UIImage *img22PL = [UIImage imageNamed:@"22PL.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( img22PL == nil ) { NSLog(@"** Warning: Could not create image from '22PL.png'."); }
	_22PL.image = img22PL;
	_22PL.contentMode = UIViewContentModeCenter;
	_22PL.bounds = CGRectMake(0, 0, 2381.0, 971.0);
	_22PL__root.layer.position = CGPointMake(768.000, 544.567);
	_22PL__xScale.transform = CGAffineTransformMakeScale(0.50, 1.00);
	_22PL__yScale.transform = CGAffineTransformMakeScale(1.00, 0.50);
	_22PL__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:_22PL__root];
	[_22PL__root addSubview:_22PL__xScale];
	[_22PL__xScale addSubview:_22PL__yScale];
	[_22PL__yScale addSubview:_22PL];
	[__scaling__ addSubview:_22PL__root];
	viewsByName[@"22PL__root"] = _22PL__root;
	viewsByName[@"22PL__xScale"] = _22PL__xScale;
	viewsByName[@"22PL__yScale"] = _22PL__yScale;
	viewsByName[@"22PL"] = _22PL;

	M22IntroAnimationPassthroughView *meanwhile__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *meanwhile__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *meanwhile__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *meanwhile = [UIImageView new];
	UIImage *imgMeanwhile = [UIImage imageNamed:@"meanwhile.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgMeanwhile == nil ) { NSLog(@"** Warning: Could not create image from 'meanwhile.png'."); }
	meanwhile.image = imgMeanwhile;
	meanwhile.contentMode = UIViewContentModeCenter;
	meanwhile.bounds = CGRectMake(0, 0, 2445.0, 446.0);
	meanwhile__root.layer.position = CGPointMake(768.000, 183.948);
	meanwhile__xScale.transform = CGAffineTransformMakeScale(0.50, 1.00);
	meanwhile__yScale.transform = CGAffineTransformMakeScale(1.00, 0.50);
	meanwhile__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:meanwhile__root];
	[meanwhile__root addSubview:meanwhile__xScale];
	[meanwhile__xScale addSubview:meanwhile__yScale];
	[meanwhile__yScale addSubview:meanwhile];
	[__scaling__ addSubview:meanwhile__root];
	viewsByName[@"meanwhile__root"] = meanwhile__root;
	viewsByName[@"meanwhile__xScale"] = meanwhile__xScale;
	viewsByName[@"meanwhile__yScale"] = meanwhile__yScale;
	viewsByName[@"meanwhile"] = meanwhile;

	M22IntroAnimationPassthroughView *base__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *base__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *base__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *base = [UIImageView new];
	UIImage *imgBase = [UIImage imageNamed:@"base.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgBase == nil ) { NSLog(@"** Warning: Could not create image from 'base.png'."); }
	base.image = imgBase;
	base.contentMode = UIViewContentModeCenter;
	base.bounds = CGRectMake(0, 0, 2155.0, 718.0);
	base__root.layer.position = CGPointMake(768.800, 1789.520);
	base__xScale.transform = CGAffineTransformMakeScale(0.72, 1.00);
	base__yScale.transform = CGAffineTransformMakeScale(1.00, 0.72);
	base__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:base__root];
	[base__root addSubview:base__xScale];
	[base__xScale addSubview:base__yScale];
	[base__yScale addSubview:base];
	[__scaling__ addSubview:base__root];
	viewsByName[@"base__root"] = base__root;
	viewsByName[@"base__xScale"] = base__xScale;
	viewsByName[@"base__yScale"] = base__yScale;
	viewsByName[@"base"] = base;

	M22IntroAnimationPassthroughView *blurb__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *blurb__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *blurb__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *blurb = [UIImageView new];
	UIImage *imgBlurb = [UIImage imageNamed:@"blurb.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgBlurb == nil ) { NSLog(@"** Warning: Could not create image from 'blurb.png'."); }
	blurb.image = imgBlurb;
	blurb.contentMode = UIViewContentModeCenter;
	blurb.bounds = CGRectMake(0, 0, 2072.0, 609.0);
	blurb__root.layer.position = CGPointMake(772.000, 1792.812);
	blurb__xScale.transform = CGAffineTransformMakeScale(0.72, 1.00);
	blurb__yScale.transform = CGAffineTransformMakeScale(1.00, 0.72);
	blurb__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:blurb__root];
	[blurb__root addSubview:blurb__xScale];
	[blurb__xScale addSubview:blurb__yScale];
	[blurb__yScale addSubview:blurb];
	[__scaling__ addSubview:blurb__root];
	viewsByName[@"blurb__root"] = blurb__root;
	viewsByName[@"blurb__xScale"] = blurb__xScale;
	viewsByName[@"blurb__yScale"] = blurb__yScale;
	viewsByName[@"blurb"] = blurb;

	M22IntroAnimationPassthroughView *flash__root = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *flash__xScale = [M22IntroAnimationPassthroughView new];
	M22IntroAnimationPassthroughView *flash__yScale = [M22IntroAnimationPassthroughView new];
	UIImageView *flash = [UIImageView new];
	UIImage *imgFlash = [UIImage imageNamed:@"flash.png" inBundle:bundle compatibleWithTraitCollection:nil];
	if ( imgFlash == nil ) { NSLog(@"** Warning: Could not create image from 'flash.png'."); }
	flash.image = imgFlash;
	flash.contentMode = UIViewContentModeCenter;
	flash.bounds = CGRectMake(0, 0, 1067.0, 1422.0);
	flash__root.layer.position = CGPointMake(768.000, 1545.357);
	flash__xScale.transform = CGAffineTransformMakeScale(0.00, 1.00);
	flash__yScale.transform = CGAffineTransformMakeScale(1.00, 0.00);
	flash__root.transform = CGAffineTransformMakeRotation(0.000);
	[__scaling__ addSubview:flash__root];
	[flash__root addSubview:flash__xScale];
	[flash__xScale addSubview:flash__yScale];
	[flash__yScale addSubview:flash];
	[__scaling__ addSubview:flash__root];
	viewsByName[@"flash__root"] = flash__root;
	viewsByName[@"flash__xScale"] = flash__xScale;
	viewsByName[@"flash__yScale"] = flash__yScale;
	viewsByName[@"flash"] = flash;

	self.viewsByName = viewsByName;
}

#pragma mark - M22IntroAnimation

- (void)addM22IntroAnimation
{
	[self addM22IntroAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO completion:NULL];
}

- (void)addM22IntroAnimationWithCompletion:(void (^)(BOOL finished))completionBlock
{
	[self addM22IntroAnimationWithBeginTime:0 andFillMode:kCAFillModeBoth andRemoveOnCompletion:NO completion:completionBlock];
}

- (void)addM22IntroAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion
{
	[self addM22IntroAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion completion:NULL];
}

- (void)addM22IntroAnimationAndRemoveOnCompletion:(BOOL)removedOnCompletion completion:(void (^)(BOOL finished))completionBlock
{
	[self addM22IntroAnimationWithBeginTime:0 andFillMode:removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth andRemoveOnCompletion:removedOnCompletion completion:completionBlock];
}

- (void)addM22IntroAnimationWithBeginTime:(CFTimeInterval)beginTime andFillMode:(NSString *)fillMode andRemoveOnCompletion:(BOOL)removedOnCompletion completion:(void (^)(BOOL finished))completionBlock
{
	CAMediaTimingFunction *linearTiming = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];

	if (completionBlock)
	{
		CABasicAnimation *representativeAnimation = [CABasicAnimation animationWithKeyPath:@"not.a.real.key"];
		representativeAnimation.duration = 2.500;
		representativeAnimation.delegate = self;
		[self.layer addAnimation:representativeAnimation forKey:@"M22IntroAnimation"];
		[self.completionBlocksByAnimation setObject:completionBlock forKey:[self.layer animationForKey:@"M22IntroAnimation"]];
	}

	CAKeyframeAnimation *meanwhileOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	meanwhileOpacityAnimation.duration = 2.500;
	meanwhileOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000)];
	meanwhileOpacityAnimation.keyTimes = @[@(0.000), @(0.480), @(0.500), @(1.000)];
	meanwhileOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming];
	meanwhileOpacityAnimation.beginTime = beginTime;
	meanwhileOpacityAnimation.fillMode = fillMode;
	meanwhileOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"meanwhile__root"] layer] addAnimation:meanwhileOpacityAnimation forKey:@"M22IntroAnimation_Opacity"];

	CAKeyframeAnimation *mfgBoltScaleXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.x"];
	mfgBoltScaleXAnimation.duration = 2.500;
	mfgBoltScaleXAnimation.values = @[@(0.500), @(0.250), @(0.500), @(0.500)];
	mfgBoltScaleXAnimation.keyTimes = @[@(0.000), @(0.420), @(0.540), @(1.000)];
	mfgBoltScaleXAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming];
	mfgBoltScaleXAnimation.beginTime = beginTime;
	mfgBoltScaleXAnimation.fillMode = fillMode;
	mfgBoltScaleXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"mfg bolt__xScale"] layer] addAnimation:mfgBoltScaleXAnimation forKey:@"M22IntroAnimation_ScaleX"];

	CAKeyframeAnimation *mfgBoltScaleYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.y"];
	mfgBoltScaleYAnimation.duration = 2.500;
	mfgBoltScaleYAnimation.values = @[@(0.500), @(2.000), @(0.500), @(0.500)];
	mfgBoltScaleYAnimation.keyTimes = @[@(0.000), @(0.420), @(0.540), @(1.000)];
	mfgBoltScaleYAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming];
	mfgBoltScaleYAnimation.beginTime = beginTime;
	mfgBoltScaleYAnimation.fillMode = fillMode;
	mfgBoltScaleYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"mfg bolt__yScale"] layer] addAnimation:mfgBoltScaleYAnimation forKey:@"M22IntroAnimation_ScaleY"];

	CAKeyframeAnimation *mfgBoltTranslationXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.x"];
	mfgBoltTranslationXAnimation.duration = 2.500;
	mfgBoltTranslationXAnimation.values = @[@(5.957), @(56.543), @(0.000), @(0.000)];
	mfgBoltTranslationXAnimation.keyTimes = @[@(0.000), @(0.420), @(0.500), @(1.000)];
	mfgBoltTranslationXAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming];
	mfgBoltTranslationXAnimation.beginTime = beginTime;
	mfgBoltTranslationXAnimation.fillMode = fillMode;
	mfgBoltTranslationXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"mfg bolt__root"] layer] addAnimation:mfgBoltTranslationXAnimation forKey:@"M22IntroAnimation_TranslationX"];

	CAKeyframeAnimation *mfgBoltTranslationYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.y"];
	mfgBoltTranslationYAnimation.duration = 2.500;
	mfgBoltTranslationYAnimation.values = @[@(-1871.836), @(-2178.125), @(0.000), @(0.000)];
	mfgBoltTranslationYAnimation.keyTimes = @[@(0.000), @(0.420), @(0.440), @(1.000)];
	mfgBoltTranslationYAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming];
	mfgBoltTranslationYAnimation.beginTime = beginTime;
	mfgBoltTranslationYAnimation.fillMode = fillMode;
	mfgBoltTranslationYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"mfg bolt__root"] layer] addAnimation:mfgBoltTranslationYAnimation forKey:@"M22IntroAnimation_TranslationY"];

	CAKeyframeAnimation *burstOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	burstOpacityAnimation.duration = 2.500;
	burstOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000)];
	burstOpacityAnimation.keyTimes = @[@(0.000), @(0.700), @(1.000)];
	burstOpacityAnimation.timingFunctions = @[linearTiming, linearTiming];
	burstOpacityAnimation.beginTime = beginTime;
	burstOpacityAnimation.fillMode = fillMode;
	burstOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"burst__root"] layer] addAnimation:burstOpacityAnimation forKey:@"M22IntroAnimation_Opacity"];

	CAKeyframeAnimation *burstScaleXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.x"];
	burstScaleXAnimation.duration = 2.500;
	burstScaleXAnimation.values = @[@(0.720), @(0.050), @(0.720)];
	burstScaleXAnimation.keyTimes = @[@(0.000), @(0.700), @(1.000)];
	burstScaleXAnimation.timingFunctions = @[linearTiming, linearTiming];
	burstScaleXAnimation.beginTime = beginTime;
	burstScaleXAnimation.fillMode = fillMode;
	burstScaleXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"burst__xScale"] layer] addAnimation:burstScaleXAnimation forKey:@"M22IntroAnimation_ScaleX"];

	CAKeyframeAnimation *burstScaleYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.y"];
	burstScaleYAnimation.duration = 2.500;
	burstScaleYAnimation.values = @[@(0.720), @(0.050), @(0.720)];
	burstScaleYAnimation.keyTimes = @[@(0.000), @(0.700), @(1.000)];
	burstScaleYAnimation.timingFunctions = @[linearTiming, linearTiming];
	burstScaleYAnimation.beginTime = beginTime;
	burstScaleYAnimation.fillMode = fillMode;
	burstScaleYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"burst__yScale"] layer] addAnimation:burstScaleYAnimation forKey:@"M22IntroAnimation_ScaleY"];

	CAKeyframeAnimation *_22PLOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	_22PLOpacityAnimation.duration = 2.500;
	_22PLOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000)];
	_22PLOpacityAnimation.keyTimes = @[@(0.000), @(0.480), @(0.500), @(1.000)];
	_22PLOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming];
	_22PLOpacityAnimation.beginTime = beginTime;
	_22PLOpacityAnimation.fillMode = fillMode;
	_22PLOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"22PL__root"] layer] addAnimation:_22PLOpacityAnimation forKey:@"M22IntroAnimation_Opacity"];

	CAKeyframeAnimation *ralfBirdScaleXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.x"];
	ralfBirdScaleXAnimation.duration = 2.500;
	ralfBirdScaleXAnimation.values = @[@(1.000), @(0.500), @(0.500)];
	ralfBirdScaleXAnimation.keyTimes = @[@(0.000), @(0.340), @(1.000)];
	ralfBirdScaleXAnimation.timingFunctions = @[linearTiming, linearTiming];
	ralfBirdScaleXAnimation.beginTime = beginTime;
	ralfBirdScaleXAnimation.fillMode = fillMode;
	ralfBirdScaleXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"ralf bird__xScale"] layer] addAnimation:ralfBirdScaleXAnimation forKey:@"M22IntroAnimation_ScaleX"];

	CAKeyframeAnimation *ralfBirdScaleYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.y"];
	ralfBirdScaleYAnimation.duration = 2.500;
	ralfBirdScaleYAnimation.values = @[@(1.000), @(0.500), @(0.500)];
	ralfBirdScaleYAnimation.keyTimes = @[@(0.000), @(0.340), @(1.000)];
	ralfBirdScaleYAnimation.timingFunctions = @[linearTiming, linearTiming];
	ralfBirdScaleYAnimation.beginTime = beginTime;
	ralfBirdScaleYAnimation.fillMode = fillMode;
	ralfBirdScaleYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"ralf bird__yScale"] layer] addAnimation:ralfBirdScaleYAnimation forKey:@"M22IntroAnimation_ScaleY"];

	CAKeyframeAnimation *ralfBirdTranslationXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.x"];
	ralfBirdTranslationXAnimation.duration = 2.500;
	ralfBirdTranslationXAnimation.values = @[@(-1625.488), @(-1422.441), @(0.000), @(0.000)];
	ralfBirdTranslationXAnimation.keyTimes = @[@(0.000), @(0.000), @(0.340), @(1.000)];
	ralfBirdTranslationXAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming];
	ralfBirdTranslationXAnimation.beginTime = beginTime;
	ralfBirdTranslationXAnimation.fillMode = fillMode;
	ralfBirdTranslationXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"ralf bird__root"] layer] addAnimation:ralfBirdTranslationXAnimation forKey:@"M22IntroAnimation_TranslationX"];

	CAKeyframeAnimation *ralfBirdTranslationYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.y"];
	ralfBirdTranslationYAnimation.duration = 2.500;
	ralfBirdTranslationYAnimation.values = @[@(-1601.855), @(0.000), @(0.000)];
	ralfBirdTranslationYAnimation.keyTimes = @[@(0.000), @(0.340), @(1.000)];
	ralfBirdTranslationYAnimation.timingFunctions = @[linearTiming, linearTiming];
	ralfBirdTranslationYAnimation.beginTime = beginTime;
	ralfBirdTranslationYAnimation.fillMode = fillMode;
	ralfBirdTranslationYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"ralf bird__root"] layer] addAnimation:ralfBirdTranslationYAnimation forKey:@"M22IntroAnimation_TranslationY"];

	CAKeyframeAnimation *capStarRotationAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.rotation.z"];
	capStarRotationAnimation.duration = 2.500;
	capStarRotationAnimation.values = @[@(0.000), @(-6.283), @(-6.283)];
	capStarRotationAnimation.keyTimes = @[@(0.000), @(0.160), @(1.000)];
	capStarRotationAnimation.timingFunctions = @[linearTiming, linearTiming];
	capStarRotationAnimation.beginTime = beginTime;
	capStarRotationAnimation.fillMode = fillMode;
	capStarRotationAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"cap star__root"] layer] addAnimation:capStarRotationAnimation forKey:@"M22IntroAnimation_Rotation"];

	CAKeyframeAnimation *capStarOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	capStarOpacityAnimation.duration = 2.500;
	capStarOpacityAnimation.values = @[@(1.000), @(1.000)];
	capStarOpacityAnimation.keyTimes = @[@(0.000), @(1.000)];
	capStarOpacityAnimation.timingFunctions = @[linearTiming];
	capStarOpacityAnimation.beginTime = beginTime;
	capStarOpacityAnimation.fillMode = fillMode;
	capStarOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"cap star__root"] layer] addAnimation:capStarOpacityAnimation forKey:@"M22IntroAnimation_Opacity"];

	CAKeyframeAnimation *capStarScaleXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.x"];
	capStarScaleXAnimation.duration = 2.500;
	capStarScaleXAnimation.values = @[@(1.000), @(0.500), @(0.500)];
	capStarScaleXAnimation.keyTimes = @[@(0.000), @(0.160), @(1.000)];
	capStarScaleXAnimation.timingFunctions = @[linearTiming, linearTiming];
	capStarScaleXAnimation.beginTime = beginTime;
	capStarScaleXAnimation.fillMode = fillMode;
	capStarScaleXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"cap star__xScale"] layer] addAnimation:capStarScaleXAnimation forKey:@"M22IntroAnimation_ScaleX"];

	CAKeyframeAnimation *capStarScaleYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.y"];
	capStarScaleYAnimation.duration = 2.500;
	capStarScaleYAnimation.values = @[@(1.000), @(0.500), @(0.500)];
	capStarScaleYAnimation.keyTimes = @[@(0.000), @(0.160), @(1.000)];
	capStarScaleYAnimation.timingFunctions = @[linearTiming, linearTiming];
	capStarScaleYAnimation.beginTime = beginTime;
	capStarScaleYAnimation.fillMode = fillMode;
	capStarScaleYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"cap star__yScale"] layer] addAnimation:capStarScaleYAnimation forKey:@"M22IntroAnimation_ScaleY"];

	CAKeyframeAnimation *capStarTranslationXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.x"];
	capStarTranslationXAnimation.duration = 2.500;
	capStarTranslationXAnimation.values = @[@(1542.227), @(0.000), @(0.000)];
	capStarTranslationXAnimation.keyTimes = @[@(0.000), @(0.160), @(1.000)];
	capStarTranslationXAnimation.timingFunctions = @[linearTiming, linearTiming];
	capStarTranslationXAnimation.beginTime = beginTime;
	capStarTranslationXAnimation.fillMode = fillMode;
	capStarTranslationXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"cap star__root"] layer] addAnimation:capStarTranslationXAnimation forKey:@"M22IntroAnimation_TranslationX"];

	CAKeyframeAnimation *capStarTranslationYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.translation.y"];
	capStarTranslationYAnimation.duration = 2.500;
	capStarTranslationYAnimation.values = @[@(-1597.695), @(0.000), @(0.000)];
	capStarTranslationYAnimation.keyTimes = @[@(0.000), @(0.160), @(1.000)];
	capStarTranslationYAnimation.timingFunctions = @[linearTiming, linearTiming];
	capStarTranslationYAnimation.beginTime = beginTime;
	capStarTranslationYAnimation.fillMode = fillMode;
	capStarTranslationYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"cap star__root"] layer] addAnimation:capStarTranslationYAnimation forKey:@"M22IntroAnimation_TranslationY"];

	CAKeyframeAnimation *blurbOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	blurbOpacityAnimation.duration = 2.500;
	blurbOpacityAnimation.values = @[@(0.000), @(0.000), @(1.000), @(1.000)];
	blurbOpacityAnimation.keyTimes = @[@(0.000), @(0.480), @(0.500), @(1.000)];
	blurbOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming];
	blurbOpacityAnimation.beginTime = beginTime;
	blurbOpacityAnimation.fillMode = fillMode;
	blurbOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"blurb__root"] layer] addAnimation:blurbOpacityAnimation forKey:@"M22IntroAnimation_Opacity"];

	CAKeyframeAnimation *flashOpacityAnimation = [CAKeyframeAnimation animationWithKeyPath:@"opacity"];
	flashOpacityAnimation.duration = 2.500;
	flashOpacityAnimation.values = @[@(1.000), @(1.000), @(0.000), @(0.000)];
	flashOpacityAnimation.keyTimes = @[@(0.000), @(0.640), @(0.660), @(1.000)];
	flashOpacityAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming];
	flashOpacityAnimation.beginTime = beginTime;
	flashOpacityAnimation.fillMode = fillMode;
	flashOpacityAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"flash__root"] layer] addAnimation:flashOpacityAnimation forKey:@"M22IntroAnimation_Opacity"];

	CAKeyframeAnimation *flashScaleXAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.x"];
	flashScaleXAnimation.duration = 2.500;
	flashScaleXAnimation.values = @[@(0.000), @(0.000), @(3.000), @(0.000), @(0.000)];
	flashScaleXAnimation.keyTimes = @[@(0.000), @(0.460), @(0.480), @(0.640), @(1.000)];
	flashScaleXAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming];
	flashScaleXAnimation.beginTime = beginTime;
	flashScaleXAnimation.fillMode = fillMode;
	flashScaleXAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"flash__xScale"] layer] addAnimation:flashScaleXAnimation forKey:@"M22IntroAnimation_ScaleX"];

	CAKeyframeAnimation *flashScaleYAnimation = [CAKeyframeAnimation animationWithKeyPath:@"transform.scale.y"];
	flashScaleYAnimation.duration = 2.500;
	flashScaleYAnimation.values = @[@(0.000), @(0.000), @(4.000), @(0.000), @(0.000)];
	flashScaleYAnimation.keyTimes = @[@(0.000), @(0.460), @(0.480), @(0.640), @(1.000)];
	flashScaleYAnimation.timingFunctions = @[linearTiming, linearTiming, linearTiming, linearTiming];
	flashScaleYAnimation.beginTime = beginTime;
	flashScaleYAnimation.fillMode = fillMode;
	flashScaleYAnimation.removedOnCompletion = removedOnCompletion;
	[[self.viewsByName[@"flash__yScale"] layer] addAnimation:flashScaleYAnimation forKey:@"M22IntroAnimation_ScaleY"];
}

- (void)removeM22IntroAnimation
{
	[self.layer removeAnimationForKey:@"M22IntroAnimation"];
	[[self.viewsByName[@"meanwhile__root"] layer] removeAnimationForKey:@"M22IntroAnimation_Opacity"];
	[[self.viewsByName[@"mfg bolt__xScale"] layer] removeAnimationForKey:@"M22IntroAnimation_ScaleX"];
	[[self.viewsByName[@"mfg bolt__yScale"] layer] removeAnimationForKey:@"M22IntroAnimation_ScaleY"];
	[[self.viewsByName[@"mfg bolt__root"] layer] removeAnimationForKey:@"M22IntroAnimation_TranslationX"];
	[[self.viewsByName[@"mfg bolt__root"] layer] removeAnimationForKey:@"M22IntroAnimation_TranslationY"];
	[[self.viewsByName[@"burst__root"] layer] removeAnimationForKey:@"M22IntroAnimation_Opacity"];
	[[self.viewsByName[@"burst__xScale"] layer] removeAnimationForKey:@"M22IntroAnimation_ScaleX"];
	[[self.viewsByName[@"burst__yScale"] layer] removeAnimationForKey:@"M22IntroAnimation_ScaleY"];
	[[self.viewsByName[@"22PL__root"] layer] removeAnimationForKey:@"M22IntroAnimation_Opacity"];
	[[self.viewsByName[@"ralf bird__xScale"] layer] removeAnimationForKey:@"M22IntroAnimation_ScaleX"];
	[[self.viewsByName[@"ralf bird__yScale"] layer] removeAnimationForKey:@"M22IntroAnimation_ScaleY"];
	[[self.viewsByName[@"ralf bird__root"] layer] removeAnimationForKey:@"M22IntroAnimation_TranslationX"];
	[[self.viewsByName[@"ralf bird__root"] layer] removeAnimationForKey:@"M22IntroAnimation_TranslationY"];
	[[self.viewsByName[@"cap star__root"] layer] removeAnimationForKey:@"M22IntroAnimation_Rotation"];
	[[self.viewsByName[@"cap star__root"] layer] removeAnimationForKey:@"M22IntroAnimation_Opacity"];
	[[self.viewsByName[@"cap star__xScale"] layer] removeAnimationForKey:@"M22IntroAnimation_ScaleX"];
	[[self.viewsByName[@"cap star__yScale"] layer] removeAnimationForKey:@"M22IntroAnimation_ScaleY"];
	[[self.viewsByName[@"cap star__root"] layer] removeAnimationForKey:@"M22IntroAnimation_TranslationX"];
	[[self.viewsByName[@"cap star__root"] layer] removeAnimationForKey:@"M22IntroAnimation_TranslationY"];
	[[self.viewsByName[@"blurb__root"] layer] removeAnimationForKey:@"M22IntroAnimation_Opacity"];
	[[self.viewsByName[@"flash__root"] layer] removeAnimationForKey:@"M22IntroAnimation_Opacity"];
	[[self.viewsByName[@"flash__xScale"] layer] removeAnimationForKey:@"M22IntroAnimation_ScaleX"];
	[[self.viewsByName[@"flash__yScale"] layer] removeAnimationForKey:@"M22IntroAnimation_ScaleY"];
}

- (void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag
{
	void (^completion)(BOOL) = [self.completionBlocksByAnimation objectForKey:anim];
	[self.completionBlocksByAnimation removeObjectForKey:anim];
	if (completion)
	{
		completion(flag);
	}
}

- (void)removeAllAnimations
{
	for (UIView *view in self.viewsByName.allValues)
	{
		[view.layer removeAllAnimations];
	}
	[self.layer removeAnimationForKey:@"M22IntroAnimation"];
}

@end